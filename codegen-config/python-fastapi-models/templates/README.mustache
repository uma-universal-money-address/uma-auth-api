# OpenAPI generated Python Pydantic Models

This Python package is automatically generated by the [OpenAPI Generator](https://openapi-generator.tech) project:

- API version: {{appVersion}}
{{^hideGenerationTimestamp}}
- Build date: {{generatedDate}}
{{/hideGenerationTimestamp}}
- Generator version: {{generatorVersion}}
- Build package: {{generatorClass}}

## Requirements

Python >= {{{generatorLanguageVersion}}}

## Installation & Usage

To install the library, simply run:

```bash
pip install uma-auth-api
```

When handling a request, you can do something like:

```python
from uma_auth.models.pay_invoice_request import PayInvoiceRequest
from uma_auth.models.pay_invoice_response import PayInvoiceResponse

def handle_pay_invoice():
    try:
        request_data = PayInvoiceRequest.from_dict(request.get_json())
    except Exception as e:
        abort_with_error(400, f"Invalid request: {e}")

    invoice = request_data.invoice
    amount = request_data.amount

    # ... actually pay the invoice ...

    return PayInvoiceResponse(preimage=payment_result.preimage).to_dict()
```

Note that this library only contains request and response model types to help with type safety and encoding/decoding of requests and responses.
If you want something more custom for a specific API framework, you can generate your own code using the
[OpenAPI Generator CLI](https://openapi-generator.tech/docs/generators). There are generators for the following server frameworks:

- [aiohttp](https://openapi-generator.tech/docs/generators/python-aiohttp)
- [blueplanet](https://openapi-generator.tech/docs/generators/python-blueplanet)
- [fastapi](https://openapi-generator.tech/docs/generators/python-fastapi)
- [flask](https://openapi-generator.tech/docs/generators/python-flask)
