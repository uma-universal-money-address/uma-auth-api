// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * UMA Auth API
 *
 * This API allows you to authenticate with the UMA server to take actions on a user's wallet. It's the exposed communication layer between the NWC server and the main UMA server.
 *
 * API version: 0.1
 */

package umaauth


import (
	"errors"
)



type BudgetEstimateResponse struct {

	// The estimated cost of the payment in the smallest unit of  `budget_currency_code`. This amount will be used to calculate  the amount to hold from the budget for this connection while  the payment is in-flight. 
	EstimatedBudgetCurrencyAmount int64 `json:"estimated_budget_currency_amount"`
}

// AssertBudgetEstimateResponseRequired checks if the required fields are not zero-ed
func AssertBudgetEstimateResponseRequired(obj BudgetEstimateResponse) error {
	elements := map[string]interface{}{
		"estimated_budget_currency_amount": obj.EstimatedBudgetCurrencyAmount,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertBudgetEstimateResponseConstraints checks if the values respects the defined constraints
func AssertBudgetEstimateResponseConstraints(obj BudgetEstimateResponse) error {
	if obj.EstimatedBudgetCurrencyAmount < 0 {
		return &ParsingError{Param: "EstimatedBudgetCurrencyAmount", Err: errors.New(errMsgMinValueConstraint)}
	}
	return nil
}
