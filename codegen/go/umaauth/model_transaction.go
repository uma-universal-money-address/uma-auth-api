// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * UMA Auth API
 *
 * This API allows you to authenticate with the UMA server to take actions on a user's wallet. It's the exposed communication layer between the NWC server and the main UMA server.
 *
 * API version: 0.1
 */

package umaauth




type Transaction struct {

	Type TransactionType `json:"type"`

	// The full, encoded invoice.
	Invoice *string `json:"invoice,omitempty"`

	// The invoice's description.
	Description *string `json:"description,omitempty"`

	// The invoice's description hash.
	DescriptionHash *string `json:"description_hash,omitempty"`

	// The payment preimage, optional if unpaid.
	Preimage *string `json:"preimage,omitempty"`

	// Payment hash for the payment
	PaymentHash string `json:"payment_hash"`

	// Value in msats.
	Amount int64 `json:"amount"`

	// Value in msats.
	FeesPaid *int64 `json:"fees_paid,omitempty"`

	// The time the payment/invoice was created.
	CreatedAt int32 `json:"created_at"`

	// The time the invoice expires.
	ExpiresAt *int32 `json:"expires_at,omitempty"`

	// Additional metadata attached to the invoice.
	Metadata *map[string]interface{} `json:"metadata,omitempty"`
}

// AssertTransactionRequired checks if the required fields are not zero-ed
func AssertTransactionRequired(obj Transaction) error {
	elements := map[string]interface{}{
		"type": obj.Type,
		"payment_hash": obj.PaymentHash,
		"amount": obj.Amount,
		"created_at": obj.CreatedAt,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertTransactionConstraints checks if the values respects the defined constraints
func AssertTransactionConstraints(obj Transaction) error {
	return nil
}
