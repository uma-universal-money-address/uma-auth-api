openapi: 3.0.3
info:
  description: This API allows you to authenticate with the UMA server to take actions
    on a user's wallet. It's the exposed communication layer between the NWC server
    and the main UMA server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: UMA Auth API
  version: "0.1"
servers:
- description: The production VASP API server
  url: "https://{vasp_host}/{basePath}"
  variables:
    vasp_host:
      default: vasp.net
      description: This value should be defined by the UMA VASP implementation.
    basePath:
      default: umanwc/v1
security:
- bearerAuth: []
paths:
  /invoice:
    post:
      operationId: make_invoice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MakeInvoiceRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too Many Requests
      summary: "make_invoice: Create a new invoice"
      tags:
      - UmaAuth
  /payments/bolt11:
    post:
      operationId: pay_invoice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PayInvoiceRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayInvoiceResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too Many Requests
      summary: "pay_invoice: Pay a bolt11 invoice"
      tags:
      - UmaAuth
  /invoices/{payment_hash}:
    get:
      operationId: lookup_invoice
      parameters:
      - description: The payment hash of the invoice.
        explode: false
        in: path
        name: payment_hash
        required: true
        schema:
          example: f1d2d2f924e986ac86fdf7b36c94bcdf32beec15
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too Many Requests
      summary: "lookup_invoice: Get an invoice by its payment hash"
      tags:
      - UmaAuth
  /balance:
    get:
      operationId: get_balance
      parameters:
      - description: 'The currency code of the balance. Assumed to be in msats if
          not provided. '
        explode: true
        in: query
        name: currency_code
        required: false
        schema:
          example: USD
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBalanceResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too Many Requests
      summary: "get_balance: Get the balance of the user's wallet"
      tags:
      - UmaAuth
  /receiver/lud16/{receiver_address}:
    get:
      operationId: lookup_user_by_lud16
      parameters:
      - description: The receiver's LUD16 address.
        explode: false
        in: path
        name: receiver_address
        required: true
        schema:
          example: $alice@vasp.net
          type: string
        style: simple
      - description: The currency code of the sender's balance. Assumed to be in msats
          if not provided.  This is used to calculate the multiplier for the receiver's
          currencies.
        explode: true
        in: query
        name: base_sending_currency_code
        required: false
        schema:
          example: USD
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LookupUserResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too Many Requests
      summary: "lookup_user_by_lud16: Get receiver info by LUD16 address."
      tags:
      - UmaAuth
  /quote/lud16:
    get:
      operationId: fetch_quote_for_lud16
      parameters:
      - description: The currency code being sent from the sender's wallet.
        explode: true
        in: query
        name: sending_currency_code
        required: true
        schema:
          example: MXN
          type: string
        style: form
      - description: The currency code of the currency that the receiver will receive.
        explode: true
        in: query
        name: receiving_currency_code
        required: true
        schema:
          example: USD
          type: string
        style: form
      - description: The amount to send/receive in the smallest unit of the locked
          currency (eg. cents). See `locked_currency_side` for more information.
        explode: true
        in: query
        name: locked_currency_amount
        required: true
        schema:
          example: 1000
          exclusiveMinimum: true
          format: int64
          minimum: 0
          type: integer
        style: form
      - description: "The side of the quote which should be locked and specified in\
          \ the `locked_currency_amount`. For example, if I want to send exactly $5\
          \ MXN from my wallet, I would set this to \"sending\", and the `locked_currency_amount`\
          \ to 500 (in cents). If I want the receiver to receive exactly $10 USD,\
          \ I would set this to \"receiving\" and the `locked_currency_amount` to\
          \ 10000 (in cents)."
        explode: true
        in: query
        name: locked_currency_side
        required: true
        schema:
          $ref: '#/components/schemas/LockedCurrencySide'
        style: form
      - description: The LUD16 address to send the payment to.
        explode: true
        in: query
        name: receiver_address
        required: true
        schema:
          example: $alice@vasp.net
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quote'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too Many Requests
      summary: "fetch_quote_for_lud16: Get a quote for a payment to an LUD16 address"
      tags:
      - UmaAuth
  /quote/{payment_hash}:
    post:
      operationId: execute_quote
      parameters:
      - description: The payment hash of the quote to execute.
        explode: false
        in: path
        name: payment_hash
        required: true
        schema:
          example: f1d2d2f924e986ac86fdf7b36c94bcdf32beec15
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecuteQuoteResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too Many Requests
      summary: "execute_quote: Execute a quote"
      tags:
      - UmaAuth
  /payments/lud16:
    post:
      operationId: pay_to_lud16_address
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PayToAddressRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayToAddressResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too Many Requests
      summary: "pay_to_lud16_address: Pay directly to an LNURL address based on a\
        \ fixed sending amount."
      tags:
      - UmaAuth
  /payments/keysend:
    post:
      operationId: pay_keysend
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PayKeysendRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayKeysendResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too Many Requests
      summary: "pay_keysend: Pay directly to the pubkey of the receiver node based\
        \ on a fixed receiving amount"
      tags:
      - UmaAuth
  /info:
    get:
      operationId: get_info
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetInfoResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too Many Requests
      summary: "get_info: Get information about the user's wallet connection"
      tags:
      - UmaAuth
  /transactions:
    get:
      operationId: list_transactions
      parameters:
      - description: Starting timestamp in seconds since epoch (inclusive).
        explode: true
        in: query
        name: from
        required: false
        schema:
          example: 1683148800
          type: integer
        style: form
      - description: Ending timestamp in seconds since epoch (inclusive).
        explode: true
        in: query
        name: until
        required: false
        schema:
          example: 1683148800
          type: integer
        style: form
      - description: Maximum number of transactions to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          example: 10
          exclusiveMinimum: true
          minimum: 0
          type: integer
        style: form
      - description: Offset of the first transaction to return.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          example: 0
          minimum: 0
          type: integer
        style: form
      - description: Whether to include unpaid invoices.
        explode: true
        in: query
        name: unpaid
        required: false
        schema:
          example: false
          type: boolean
        style: form
      - description: "Type of transactions to return: \"incoming\" for invoices, \"\
          outgoing\" for payments, undefined for both."
        explode: true
        in: query
        name: type
        required: false
        schema:
          $ref: '#/components/schemas/TransactionType'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTransactionsResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too Many Requests
      summary: "list_transactions: Lists invoices and payments"
      tags:
      - UmaAuth
components:
  schemas:
    TransactionType:
      description: "Type of transaction: \"incoming\" for invoices, \"outgoing\" for\
        \ payments."
      enum:
      - incoming
      - outgoing
      type: string
    Transaction:
      example:
        amount: 1000
        fees_paid: 1000
        metadata: {}
        expires_at: 1683148800
        description_hash: f1d2d2f924e986ac86fdf7b36c94bcdf32beec15
        preimage: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
        description: Pay for pizza.
        created_at: 1683148800
        invoice: lnbcrt1pjrsa37pp50geu5vxkzn4ddc4hmfkz9x308tw9lrrqtktz2hpm0rccjyhcyp5qdqh2d68yetpd45kueeqv3jk6mccqzpgxq9z0rgqsp5ge2rdw0tzvakxslmtvfmqf2fr7eucg9ughps5vdvp6fm2utk20rs9q8pqqqssqjs3k4nzrzg2nu9slu9c3srv2ae8v69ge097q9seukyw2nger8arj93m6erz8u657hfdzztfmc55wjjm9k337krl00fyw6s9nnwaafaspcqp2uv
        type: incoming
        payment_hash: 7332c2671019264cf0e9b8626bde20c9c3979799c570a276fb9512e22aef1f08
      properties:
        type:
          $ref: '#/components/schemas/TransactionType'
        invoice:
          description: "The full, encoded invoice."
          example: lnbcrt1pjrsa37pp50geu5vxkzn4ddc4hmfkz9x308tw9lrrqtktz2hpm0rccjyhcyp5qdqh2d68yetpd45kueeqv3jk6mccqzpgxq9z0rgqsp5ge2rdw0tzvakxslmtvfmqf2fr7eucg9ughps5vdvp6fm2utk20rs9q8pqqqssqjs3k4nzrzg2nu9slu9c3srv2ae8v69ge097q9seukyw2nger8arj93m6erz8u657hfdzztfmc55wjjm9k337krl00fyw6s9nnwaafaspcqp2uv
          nullable: true
          type: string
        description:
          description: The invoice's description.
          example: Pay for pizza.
          nullable: true
          type: string
        description_hash:
          description: The invoice's description hash.
          example: f1d2d2f924e986ac86fdf7b36c94bcdf32beec15
          nullable: true
          type: string
        preimage:
          description: "The payment preimage, optional if unpaid."
          example: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
          nullable: true
          type: string
        payment_hash:
          description: Payment hash for the payment
          example: 7332c2671019264cf0e9b8626bde20c9c3979799c570a276fb9512e22aef1f08
          type: string
        amount:
          description: Value in msats.
          example: 1000
          exclusiveMinimum: true
          format: int64
          minimum: 0
          type: integer
        fees_paid:
          description: Value in msats.
          example: 1000
          format: int64
          minimum: 0
          nullable: true
          type: integer
        created_at:
          description: The time the payment/invoice was created.
          example: 1683148800
          type: integer
        expires_at:
          description: The time the invoice expires.
          example: 1683148800
          nullable: true
          type: integer
        metadata:
          description: Additional metadata attached to the invoice.
          example: {}
          nullable: true
          type: object
      required:
      - amount
      - created_at
      - payment_hash
      - type
      type: object
    Quote:
      example:
        sending_currency_code: MXN
        receiving_currency_code: USD
        fees: 10
        expires_at: 1683148800
        total_sending_amount: 123010
        total_receiving_amount: 1000
        multiplier: 123
        created_at: 1683148800
        payment_hash: f1d2d2f924e986ac86fdf7b36c94bcdf32beec15
      properties:
        sending_currency_code:
          description: The currency code of the sender's balance.
          example: MXN
          type: string
        receiving_currency_code:
          description: The currency code of the receiver's balance.
          example: USD
          type: string
        payment_hash:
          description: The payment hash of the quote. Used as an identifier to execute
            the quote.
          example: f1d2d2f924e986ac86fdf7b36c94bcdf32beec15
          type: string
        expires_at:
          description: The time the quote expires in unix timestamp.
          example: 1683148800
          type: integer
        multiplier:
          description: Number of sending currency units per receiving currency unit.
          example: 123
          exclusiveMinimum: true
          minimum: 0
          type: number
        fees:
          description: The fees associated with the quote in the smallest unit of
            the sending currency (eg. cents).
          example: 10
          format: int64
          minimum: 0
          type: integer
        total_sending_amount:
          description: The total amount that will be sent in the smallest unit of
            the sending currency (eg. cents).
          example: 123010
          exclusiveMinimum: true
          format: int64
          minimum: 0
          type: integer
        total_receiving_amount:
          description: The total amount that will be received in the smallest unit
            of the receiving currency (eg. cents).
          example: 1000
          exclusiveMinimum: true
          format: int64
          minimum: 0
          type: integer
        created_at:
          description: The time the quote was created in unix timestamp.
          example: 1683148800
          type: integer
      required:
      - created_at
      - expires_at
      - fees
      - multiplier
      - payment_hash
      - receiving_currency_code
      - sending_currency_code
      - total_receiving_amount
      - total_sending_amount
      type: object
    CurrencyPreference:
      example:
        symbol: $
        code: USD
        min: 1
        max: 1000000
        multiplier: 100000000
        decimals: 2
        name: United States Dollar
      properties:
        code:
          description: The ISO-4217 currency code.
          example: USD
          type: string
        symbol:
          description: The currency symbol.
          example: $
          type: string
        name:
          description: The currency name.
          example: United States Dollar
          type: string
        multiplier:
          description: "Estimated number of milli-sats per smallest unit of this currency\
            \ (eg. cents) If base_sending_currency_code was specified, this is the\
            \ rate relative to that currency instead of milli-sats."
          example: 100000000
          exclusiveMinimum: true
          minimum: 0
          type: number
        decimals:
          description: "Number of digits after the decimal point for display on the\
            \ sender side, and to add clarity around what the \"smallest unit\" of\
            \ the currency is. For example, in USD, by convention, there are 2 digits\
            \ for cents - $5.95. In this case, `decimals` would be 2. Note that the\
            \ multiplier is still always in the smallest unit (cents). In addition\
            \ to display purposes, this field can be used to resolve ambiguity in\
            \ what the multiplier means. For example, if the currency is \"BTC\" and\
            \ the multiplier is 1000, really we're exchanging in SATs, so `decimals`\
            \ would be 8."
          example: 2
          minimum: 0
          type: integer
        min:
          description: The minimum amount that can be received in this currency.
          example: 1
          exclusiveMinimum: true
          format: int64
          minimum: 0
          type: integer
        max:
          description: The maximum amount that can be received in this currency.
          example: 1000000
          exclusiveMinimum: true
          format: int64
          minimum: 0
          type: integer
      required:
      - code
      - decimals
      - max
      - min
      - multiplier
      - name
      - symbol
      type: object
    ErrorCode:
      description: The NIP47 response error code.
      enum:
      - RATE_LIMITED
      - NOT_IMPLEMENTED
      - INSUFFICIENT_BALANCE
      - PAYMENT_FAILED
      - NOT_FOUND
      - QUOTA_EXCEEDED
      - RESTRICTED
      - UNAUTHORIZED
      - INTERNAL
      - OTHER
      type: string
    ErrorResponse:
      example:
        code: RATE_LIMITED
        message: This feature is not implemented.
      properties:
        code:
          $ref: '#/components/schemas/ErrorCode'
        message:
          description: The error message.
          example: This feature is not implemented.
          type: string
      required:
      - code
      - message
      type: object
    LockedCurrencySide:
      description: "The side of the quote which should be locked and specified in\
        \ the `locked_currency_amount`. For example, if I want to send exactly $5\
        \ MXN from my wallet, I would set this to \"sending\", and the `locked_currency_amount`\
        \ to 500 (in cents). If I want the receiver to receive exactly $10 USD, I\
        \ would set this to \"receiving\" and the `locked_currency_amount` to 10000\
        \ (in cents)."
      enum:
      - sending
      - receiving
      type: string
    MakeInvoiceRequest:
      example:
        amount: 1000
        description_hash: f1d2d2f924e986ac86fdf7b36c94bcdf32beec15
        description: Payment for services rendered.
        expiry: 3600
      properties:
        amount:
          description: The amount to invoice in msats.
          example: 1000
          exclusiveMinimum: true
          format: int64
          minimum: 0
          type: integer
        description:
          description: A memo to attach to the invoice.
          example: Payment for services rendered.
          type: string
        description_hash:
          description: A hash of a longer description field.
          example: f1d2d2f924e986ac86fdf7b36c94bcdf32beec15
          type: string
        expiry:
          description: The number of seconds until the invoice expires.
          example: 3600
          exclusiveMinimum: true
          minimum: 0
          type: integer
      required:
      - amount
      title: MakeInvoiceRequest
      type: object
    PayInvoiceRequest:
      example:
        amount: 1000
        invoice: lntb1u1pw0k7jw
      properties:
        invoice:
          description: The bolt11 invoice to pay.
          example: lntb1u1pw0k7jw
          type: string
        amount:
          description: The amount to pay for a 0-amount invoice.
          example: 1000
          exclusiveMinimum: true
          format: int64
          minimum: 0
          nullable: true
          type: integer
      required:
      - invoice
      title: PayInvoiceRequest
      type: object
    PayInvoiceResponse:
      example:
        preimage: abcd1234
      properties:
        preimage:
          description: The preimage of the payment.
          example: abcd1234
          type: string
      required:
      - preimage
      title: PayInvoiceResponse
      type: object
    GetBalanceResponse:
      example:
        balance: 1000
        currency_code: USD
      properties:
        balance:
          description: The balance of the user's wallet.
          example: 1000
          minimum: 0
          type: number
        currency_code:
          description: The currency code of the balance. Assumed to be msats if not
            provided.
          example: USD
          nullable: true
          type: string
      required:
      - balance
      title: GetBalanceResponse
      type: object
    LookupUserResponse:
      example:
        currencies:
        - symbol: $
          code: USD
          min: 1
          max: 1000000
          multiplier: 100000000
          decimals: 2
          name: United States Dollar
        - symbol: $
          code: USD
          min: 1
          max: 1000000
          multiplier: 100000000
          decimals: 2
          name: United States Dollar
      properties:
        currencies:
          description: The currencies the receiver accepts in order of preference.
          items:
            $ref: '#/components/schemas/CurrencyPreference'
          type: array
      title: LookupUserResponse
      type: object
    ExecuteQuoteResponse:
      example:
        preimage: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
      properties:
        preimage:
          description: The preimage of the payment.
          example: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
          type: string
      required:
      - preimage
      title: ExecuteQuoteResponse
      type: object
    PayToAddressRequest:
      example:
        sending_currency_code: MXN
        receiving_currency_code: USD
        receiver_address: $alice@vasp.net
        sending_currency_amount: 1000
      properties:
        receiver_address:
          description: The LUD16 address to pay.
          example: $alice@vasp.net
          type: string
        sending_currency_code:
          description: The code of the currency being sent from the sender's wallet.
          example: MXN
          type: string
        sending_currency_amount:
          description: The amount to send in the smallest unit of the sending currency
            (eg. cents).
          example: 1000
          exclusiveMinimum: true
          format: int64
          minimum: 0
          type: integer
        receiving_currency_code:
          description: "The code of the currency being received by the receiver. If\
            \ not provided, the receiver's default currency will be used."
          example: USD
          type: string
      required:
      - receiver_address
      - sending_currency_amount
      - sending_currency_code
      title: PayToAddressRequest
      type: object
    PayToAddressResponse:
      example:
        quote:
          sending_currency_code: MXN
          receiving_currency_code: USD
          fees: 10
          expires_at: 1683148800
          total_sending_amount: 123010
          total_receiving_amount: 1000
          multiplier: 123
          created_at: 1683148800
          payment_hash: f1d2d2f924e986ac86fdf7b36c94bcdf32beec15
        preimage: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
      properties:
        preimage:
          description: The preimage of the payment.
          example: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
          type: string
        quote:
          $ref: '#/components/schemas/Quote'
      required:
      - preimage
      - quote
      title: PayToAddressResponse
      type: object
    PayKeysendRequest_tlv_records_inner:
      description: The tlv record.
      example:
        type: 5482373484
        value: 0123456789abcdef
      properties:
        type:
          description: The tlv type
          example: 5482373484
          type: integer
        value:
          description: The hex encoded tlv value.
          example: 0123456789abcdef
          type: string
      required:
      - type
      - value
      type: object
    PayKeysendRequest:
      example:
        amount: 10000
        preimage: "1000"
        pubkey: 0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798
        tlv_records:
        - type: 5482373484
          value: 0123456789abcdef
        - type: 5482373484
          value: 0123456789abcdef
      properties:
        amount:
          description: The amount to pay in msats.
          example: 10000
          format: int64
          type: integer
        pubkey:
          description: The public key of the receiver's node.
          example: 0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798
          type: string
        preimage:
          description: Preimage of the payment.
          example: "1000"
          type: string
        tlv_records:
          description: The tlv records.
          items:
            $ref: '#/components/schemas/PayKeysendRequest_tlv_records_inner'
          type: array
      required:
      - amount
      - pubkey
      title: PayKeysendRequest
      type: object
    PayKeysendResponse:
      example:
        preimage: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
      properties:
        preimage:
          description: The preimage of the payment.
          example: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
          type: string
      required:
      - preimage
      title: PayKeysendResponse
      type: object
    GetInfoResponse:
      example:
        color: '#FF0000'
        methods:
        - make_invoice
        - make_invoice
        lud16: $alice@vasp.net
        alias: Alice's Wallet
        block_hash: abcd1234
        block_height: 1000
        pubkey: abcd1234
        network: testnet
        currencies:
        - symbol: $
          code: USD
          min: 1
          max: 1000000
          multiplier: 100000000
          decimals: 2
          name: United States Dollar
        - symbol: $
          code: USD
          min: 1
          max: 1000000
          multiplier: 100000000
          decimals: 2
          name: United States Dollar
      properties:
        alias:
          description: The alias of the user's node.
          example: Alice's Wallet
          type: string
        color:
          description: The color of the user's node.
          example: '#FF0000'
          type: string
        pubkey:
          description: The pubkey of the user's node.
          example: abcd1234
          type: string
        network:
          description: The bitcoin network of the user's node.
          enum:
          - regtest
          - signet
          - testnet
          - mainnet
          example: testnet
          type: string
        block_height:
          description: The current block height of the user's node.
          example: 1000
          minimum: 0
          type: integer
        block_hash:
          description: The current block hash of the user's node.
          example: abcd1234
          type: string
        methods:
          description: A list of supported methods for this connection.
          items:
            description: The name of method.
            example: make_invoice
            type: string
          type: array
        lud16:
          description: The lightning or UMA address for the user.
          example: $alice@vasp.net
          type: string
        currencies:
          description: "The currencies the user's wallet supports. Ordered by preference.\
            \ If not provided, assume this user only supports BTC."
          items:
            $ref: '#/components/schemas/CurrencyPreference'
          type: array
      required:
      - methods
      - network
      - pubkey
      title: GetInfoResponse
      type: object
    ListTransactionsResponse:
      example:
        transactions:
        - amount: 1000
          fees_paid: 1000
          metadata: {}
          expires_at: 1683148800
          description_hash: f1d2d2f924e986ac86fdf7b36c94bcdf32beec15
          preimage: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
          description: Pay for pizza.
          created_at: 1683148800
          invoice: lnbcrt1pjrsa37pp50geu5vxkzn4ddc4hmfkz9x308tw9lrrqtktz2hpm0rccjyhcyp5qdqh2d68yetpd45kueeqv3jk6mccqzpgxq9z0rgqsp5ge2rdw0tzvakxslmtvfmqf2fr7eucg9ughps5vdvp6fm2utk20rs9q8pqqqssqjs3k4nzrzg2nu9slu9c3srv2ae8v69ge097q9seukyw2nger8arj93m6erz8u657hfdzztfmc55wjjm9k337krl00fyw6s9nnwaafaspcqp2uv
          type: incoming
          payment_hash: 7332c2671019264cf0e9b8626bde20c9c3979799c570a276fb9512e22aef1f08
        - amount: 1000
          fees_paid: 1000
          metadata: {}
          expires_at: 1683148800
          description_hash: f1d2d2f924e986ac86fdf7b36c94bcdf32beec15
          preimage: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
          description: Pay for pizza.
          created_at: 1683148800
          invoice: lnbcrt1pjrsa37pp50geu5vxkzn4ddc4hmfkz9x308tw9lrrqtktz2hpm0rccjyhcyp5qdqh2d68yetpd45kueeqv3jk6mccqzpgxq9z0rgqsp5ge2rdw0tzvakxslmtvfmqf2fr7eucg9ughps5vdvp6fm2utk20rs9q8pqqqssqjs3k4nzrzg2nu9slu9c3srv2ae8v69ge097q9seukyw2nger8arj93m6erz8u657hfdzztfmc55wjjm9k337krl00fyw6s9nnwaafaspcqp2uv
          type: incoming
          payment_hash: 7332c2671019264cf0e9b8626bde20c9c3979799c570a276fb9512e22aef1f08
      properties:
        transactions:
          description: A list of transactions including invoices and payments.
          items:
            $ref: '#/components/schemas/Transaction'
          type: array
      required:
      - transactions
      title: ListTransactionsResponse
      type: object
  securitySchemes:
    bearerAuth:
      bearerFormat: JWT
      scheme: bearer
      type: http
