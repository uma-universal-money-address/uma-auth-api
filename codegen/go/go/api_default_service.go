// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * UMA Auth API
 *
 * This API allows you to authenticate with the UMA server to take actions on a user's wallet. It's the exposed communication layer between the NWC server and the main UMA server.
 *
 * API version: 0.1
 */

package umaauth

import (
	"context"
	"net/http"
	"errors"
)

// DefaultAPIService is a service that implements the logic for the DefaultAPIServicer
// This service should implement the business logic for every endpoint for the DefaultAPI API.
// Include any external packages or services that will be required by this service.
type DefaultAPIService struct {
}

// NewDefaultAPIService creates a default api service
func NewDefaultAPIService() *DefaultAPIService {
	return &DefaultAPIService{}
}

// ExecuteQuote - execute_quote: Execute a quote
func (s *DefaultAPIService) ExecuteQuote(ctx context.Context, executeQuoteRequest ExecuteQuoteRequest) (ImplResponse, error) {
	// TODO - update ExecuteQuote with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, ExecuteQuoteResponse{}) or use other options such as http.Ok ...
	// return Response(200, ExecuteQuoteResponse{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("ExecuteQuote method not implemented")
}

// FetchQuote - fetch_quote: Get a quote for a payment
func (s *DefaultAPIService) FetchQuote(ctx context.Context, sendingCurrencyCode string, receivingCurrencyCode string, lockedCurrencyAmount float32, lockedCurrencySide string, receivingAddress string) (ImplResponse, error) {
	// TODO - update FetchQuote with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, Quote{}) or use other options such as http.Ok ...
	// return Response(200, Quote{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("FetchQuote method not implemented")
}

// GetBalance - get_balance: Get the balance of the user&#39;s wallet
func (s *DefaultAPIService) GetBalance(ctx context.Context, getBalanceRequest GetBalanceRequest) (ImplResponse, error) {
	// TODO - update GetBalance with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, GetBalanceResponse{}) or use other options such as http.Ok ...
	// return Response(200, GetBalanceResponse{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetBalance method not implemented")
}

// GetInfo - get_info: Get information about the user&#39;s wallet connection
func (s *DefaultAPIService) GetInfo(ctx context.Context) (ImplResponse, error) {
	// TODO - update GetInfo with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, GetInfoResponse{}) or use other options such as http.Ok ...
	// return Response(200, GetInfoResponse{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetInfo method not implemented")
}

// LookupInvoice - lookup_invoice: Get an invoice by its payment hash
func (s *DefaultAPIService) LookupInvoice(ctx context.Context, paymentHash string) (ImplResponse, error) {
	// TODO - update LookupInvoice with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, Invoice{}) or use other options such as http.Ok ...
	// return Response(200, Invoice{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("LookupInvoice method not implemented")
}

// LookupUser - lookup_user: Get receiver info by UMA
func (s *DefaultAPIService) LookupUser(ctx context.Context, receiverUma string, baseSendingCurrencyCode string) (ImplResponse, error) {
	// TODO - update LookupUser with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, LookupUserResponse{}) or use other options such as http.Ok ...
	// return Response(200, LookupUserResponse{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("LookupUser method not implemented")
}

// MakeInvoice - make_invoice: Create a new invoice
func (s *DefaultAPIService) MakeInvoice(ctx context.Context, makeInvoiceRequest MakeInvoiceRequest) (ImplResponse, error) {
	// TODO - update MakeInvoice with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, Invoice{}) or use other options such as http.Ok ...
	// return Response(200, Invoice{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("MakeInvoice method not implemented")
}

// PayInvoice - pay_invoice: Pay a bolt11 invoice
func (s *DefaultAPIService) PayInvoice(ctx context.Context, payInvoiceRequest PayInvoiceRequest) (ImplResponse, error) {
	// TODO - update PayInvoice with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, PayInvoiceResponse{}) or use other options such as http.Ok ...
	// return Response(200, PayInvoiceResponse{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("PayInvoice method not implemented")
}

// PayToAddress - pay_to_address: Pay to an LNURL address
func (s *DefaultAPIService) PayToAddress(ctx context.Context, payToAddressRequest PayToAddressRequest) (ImplResponse, error) {
	// TODO - update PayToAddress with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, PayToAddressResponse{}) or use other options such as http.Ok ...
	// return Response(200, PayToAddressResponse{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("PayToAddress method not implemented")
}
