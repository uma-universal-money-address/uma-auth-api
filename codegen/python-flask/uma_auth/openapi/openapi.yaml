openapi: 3.0.3
info:
  description: This API allows you to authenticate with the UMA server to take actions
    on a user's wallet. It's the exposed communication layer between the NWC server
    and the main UMA server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: UMA Auth API
  version: "0.1"
servers:
- description: The production VASP API server
  url: "https://{vasp_host}/{basePath}"
  variables:
    vasp_host:
      default: vasp.net
      description: This value should be defined by the UMA VASP implementation.
    basePath:
      default: umanwc/v1
security:
- bearerAuth: []
paths:
  /balance:
    get:
      operationId: get_balance
      parameters:
      - description: 'The currency code of the balance. Assumed to be in msats if
          not provided. '
        explode: true
        in: query
        name: currency_code
        required: false
        schema:
          example: USD
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBalanceResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
      summary: "get_balance: Get the balance of the user's wallet"
      tags:
      - UmaAuth
      x-openapi-router-controller: uma_auth.controllers.uma_auth_controller
  /info:
    get:
      operationId: get_info
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetInfoResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
      summary: "get_info: Get information about the user's wallet connection"
      tags:
      - UmaAuth
      x-openapi-router-controller: uma_auth.controllers.uma_auth_controller
  /invoice:
    post:
      operationId: make_invoice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MakeInvoiceRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
      summary: "make_invoice: Create a new invoice"
      tags:
      - UmaAuth
      x-openapi-router-controller: uma_auth.controllers.uma_auth_controller
  /invoices/{payment_hash}:
    get:
      operationId: lookup_invoice
      parameters:
      - description: The payment hash of the invoice.
        explode: false
        in: path
        name: payment_hash
        required: true
        schema:
          example: f1d2d2f924e986ac86fdf7b36c94bcdf32beec15
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
      summary: "lookup_invoice: Get an invoice by its payment hash"
      tags:
      - UmaAuth
      x-openapi-router-controller: uma_auth.controllers.uma_auth_controller
  /payments/bolt11:
    post:
      operationId: pay_invoice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PayInvoiceRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayInvoiceResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
      summary: "pay_invoice: Pay a bolt11 invoice"
      tags:
      - UmaAuth
      x-openapi-router-controller: uma_auth.controllers.uma_auth_controller
  /payments/lnurl:
    post:
      operationId: pay_to_address
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PayToAddressRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayToAddressResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
      summary: "pay_to_address: Pay to an LNURL address"
      tags:
      - UmaAuth
      x-openapi-router-controller: uma_auth.controllers.uma_auth_controller
  /quote:
    get:
      operationId: fetch_quote
      parameters:
      - description: The currency code being sent from the sender's wallet.
        explode: true
        in: query
        name: sending_currency_code
        required: true
        schema:
          example: MXN
          type: string
        style: form
      - description: The currency code of the currency that the receiver will receive.
        explode: true
        in: query
        name: receiving_currency_code
        required: true
        schema:
          example: USD
          type: string
        style: form
      - description: The amount to send/receive in the smallest unit of the locked
          currency (eg. cents). See `locked_currency_side` for more information.
        explode: true
        in: query
        name: locked_currency_amount
        required: true
        schema:
          example: 1000
          type: integer
        style: form
      - description: "The side of the quote which should be locked and specified in\
          \ the `locked_currency_amount`. For example, if I want to send exactly $5\
          \ MXN from my wallet, I would set this to \"sending\", and the `locked_currency_amount`\
          \ to 500 (in cents). If I want the receiver to receive exactly $10 USD,\
          \ I would set this to \"receiving\" and the `locked_currency_amount` to\
          \ 10000 (in cents)."
        explode: true
        in: query
        name: locked_currency_side
        required: true
        schema:
          enum:
          - sending
          - receiving
          example: sending
          type: string
        style: form
      - description: The UMA address to send the payment to.
        explode: true
        in: query
        name: receiving_address
        required: true
        schema:
          example: $alice@vasp.net
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quote'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
      summary: "fetch_quote: Get a quote for a payment"
      tags:
      - UmaAuth
      x-openapi-router-controller: uma_auth.controllers.uma_auth_controller
    post:
      operationId: execute_quote
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExecuteQuoteRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecuteQuoteResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
      summary: "execute_quote: Execute a quote"
      tags:
      - UmaAuth
      x-openapi-router-controller: uma_auth.controllers.uma_auth_controller
  /receiver/uma/{receiver_uma}:
    get:
      operationId: lookup_user
      parameters:
      - description: The receiver's UMA.
        explode: false
        in: path
        name: receiver_uma
        required: true
        schema:
          example: $alice@vasp.net
          type: string
        style: simple
      - description: The currency code of the sender's balance. Assumed to be in msats
          if not provided.  This is used to calculate the multiplier for the receiver's
          currencies.
        explode: true
        in: query
        name: base_sending_currency_code
        required: false
        schema:
          example: USD
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LookupUserResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
      summary: "lookup_user: Get receiver info by UMA"
      tags:
      - UmaAuth
      x-openapi-router-controller: uma_auth.controllers.uma_auth_controller
components:
  schemas:
    Invoice:
      example:
        amount: 1000
        metadata: {}
        expires_at: 2021-01-01T00:00:00Z
        payment_request: lntb1u1pw0k7jw
        preimage: abcd1234
        memo: Payment for services rendered.
        created_at: 2021-01-01T00:00:00Z
        settled_at: 2021-01-01T00:00:00Z
        payment_hash: f1d2d2f924e986ac86fdf7b36c94bcdf32beec15
        type: incoming
      properties:
        payment_request:
          description: "The full, encoded payment request."
          example: lntb1u1pw0k7jw
          title: payment_request
          type: string
        amount:
          description: The amount of the invoice in msats.
          example: 1000
          title: amount
          type: integer
        payment_hash:
          description: The payment hash of the invoice.
          example: f1d2d2f924e986ac86fdf7b36c94bcdf32beec15
          title: payment_hash
          type: string
        memo:
          description: A memo attached to the invoice.
          example: Payment for services rendered.
          nullable: true
          title: memo
          type: string
        metadata:
          description: Additional metadata attached to the invoice.
          example: {}
          nullable: true
          title: metadata
          type: object
        preimage:
          description: The payment preimage of the invoice.
          example: abcd1234
          nullable: true
          title: preimage
          type: string
        expires_at:
          description: The time the invoice expires.
          example: 2021-01-01T00:00:00Z
          format: date-time
          nullable: true
          title: expires_at
          type: string
        created_at:
          description: The time the invoice was created.
          example: 2021-01-01T00:00:00Z
          format: date-time
          title: created_at
          type: string
        settled_at:
          description: The time the invoice was settled.
          example: 2021-01-01T00:00:00Z
          format: date-time
          nullable: true
          title: settled_at
          type: string
        type:
          description: Whether the invoice is incoming (created by this user) or outgoing
            (created by another user).
          enum:
          - incoming
          - outgoing
          title: type
          type: string
      required:
      - amount
      - created_at
      - payment_hash
      - payment_request
      - type
      title: Invoice
      type: object
    Quote:
      example:
        sending_currency_code: MXN
        receiving_currency_code: USD
        fees: 10
        expires_at: 2021-01-01T00:00:00Z
        total_sending_amount: 123010
        total_receiving_amount: 1000
        multiplier: 123
        created_at: 2021-01-01T00:00:00Z
        payment_hash: f1d2d2f924e986ac86fdf7b36c94bcdf32beec15
      properties:
        sending_currency_code:
          description: The currency code of the sender's balance.
          example: MXN
          title: sending_currency_code
          type: string
        receiving_currency_code:
          description: The currency code of the receiver's balance.
          example: USD
          title: receiving_currency_code
          type: string
        payment_hash:
          description: The payment hash of the quote. Used as an identifier to execute
            the quote.
          example: f1d2d2f924e986ac86fdf7b36c94bcdf32beec15
          title: payment_hash
          type: string
        expires_at:
          description: The time the quote expires.
          example: 2021-01-01T00:00:00Z
          format: date-time
          title: expires_at
          type: string
        multiplier:
          description: Number of sending currency units per receiving currency unit.
          example: 123
          title: multiplier
          type: integer
        fees:
          description: The fees associated with the quote in the smallest unit of
            the sending currency (eg. cents).
          example: 10
          title: fees
          type: integer
        total_sending_amount:
          description: The total amount that will be sent in the smallest unit of
            the sending currency (eg. cents).
          example: 123010
          title: total_sending_amount
          type: integer
        total_receiving_amount:
          description: The total amount that will be received in the smallest unit
            of the receiving currency (eg. cents).
          example: 1000
          title: total_receiving_amount
          type: integer
        created_at:
          description: The time the quote was created.
          example: 2021-01-01T00:00:00Z
          format: date-time
          title: created_at
          type: string
      required:
      - created_at
      - expires_at
      - fees
      - multiplier
      - payment_hash
      - receiving_currency_code
      - sending_currency_code
      - total_receiving_amount
      - total_sending_amount
      title: Quote
      type: object
    CurrencyPreference:
      example:
        symbol: $
        code: USD
        min: 1
        max: 1000000
        multiplier: 100000000
        decimals: 2
        name: United States Dollar
      properties:
        code:
          description: The ISO-4217 currency code.
          example: USD
          title: code
          type: string
        symbol:
          description: The currency symbol.
          example: $
          title: symbol
          type: string
        name:
          description: The currency name.
          example: United States Dollar
          title: name
          type: string
        multiplier:
          description: "Estimated number of milli-sats per smallest unit of this currency\
            \ (eg. cents) If base_sending_currency_code was specified, this is the\
            \ rate relative to that currency instead of milli-sats."
          example: 100000000
          title: multiplier
          type: number
        decimals:
          description: "Number of digits after the decimal point for display on the\
            \ sender side, and to add clarity around what the \"smallest unit\" of\
            \ the currency is. For example, in USD, by convention, there are 2 digits\
            \ for cents - $5.95. In this case, `decimals` would be 2. Note that the\
            \ multiplier is still always in the smallest unit (cents). In addition\
            \ to display purposes, this field can be used to resolve ambiguity in\
            \ what the multiplier means. For example, if the currency is \"BTC\" and\
            \ the multiplier is 1000, really we're exchanging in SATs, so `decimals`\
            \ would be 8."
          example: 2
          title: decimals
          type: integer
        min:
          description: The minimum amount that can be received in this currency.
          example: 1
          title: min
          type: integer
        max:
          description: The maximum amount that can be received in this currency.
          example: 1000000
          title: max
          type: integer
      required:
      - code
      - decimals
      - max
      - min
      - multiplier
      - name
      - symbol
      title: CurrencyPreference
      type: object
    ErrorResponse:
      example:
        code: NOT_IMPLEMENTED
        message: This feature is not implemented.
      properties:
        code:
          description: The error code.
          example: NOT_IMPLEMENTED
          title: code
          type: string
        message:
          description: The error message.
          example: This feature is not implemented.
          title: message
          type: string
      required:
      - code
      - message
      title: ErrorResponse
      type: object
    MakeInvoiceRequest:
      example:
        amount: 1000
        description_hash: f1d2d2f924e986ac86fdf7b36c94bcdf32beec15
        description: Payment for services rendered.
        expiry: 3600
      properties:
        amount:
          description: The amount to invoice in msats.
          example: 1000
          minimum: 0
          title: amount
          type: integer
        description:
          description: A memo to attach to the invoice.
          example: Payment for services rendered.
          title: description
          type: string
        description_hash:
          description: A hash of a longer description field.
          example: f1d2d2f924e986ac86fdf7b36c94bcdf32beec15
          title: description_hash
          type: string
        expiry:
          description: The number of seconds until the invoice expires.
          example: 3600
          title: expiry
          type: integer
      required:
      - amount
      title: MakeInvoiceRequest
      type: object
    PayInvoiceRequest:
      example:
        amount: 1000
        invoice: lntb1u1pw0k7jw
      properties:
        invoice:
          description: The bolt11 invoice to pay.
          example: lntb1u1pw0k7jw
          title: invoice
          type: string
        amount:
          description: The amount to pay for a 0-amount invoice.
          example: 1000
          nullable: true
          title: amount
          type: integer
      required:
      - invoice
      title: PayInvoiceRequest
      type: object
    PayInvoiceResponse:
      example:
        preimage: abcd1234
      properties:
        preimage:
          description: The preimage of the payment.
          example: abcd1234
          title: preimage
          type: string
      required:
      - preimage
      title: PayInvoiceResponse
      type: object
    GetBalanceResponse:
      example:
        balance: 1000
        currency_code: USD
      properties:
        balance:
          description: The balance of the user's wallet.
          example: 1000
          title: balance
          type: number
        currency_code:
          description: The currency code of the balance. Assumed to be msats if not
            provided.
          example: USD
          nullable: true
          title: currency_code
          type: string
      required:
      - balance
      title: GetBalanceResponse
      type: object
    LookupUserResponse:
      example:
        currencies:
        - symbol: $
          code: USD
          min: 1
          max: 1000000
          multiplier: 100000000
          decimals: 2
          name: United States Dollar
        - symbol: $
          code: USD
          min: 1
          max: 1000000
          multiplier: 100000000
          decimals: 2
          name: United States Dollar
      properties:
        currencies:
          description: The currencies the receiver accepts in order of preference.
          items:
            $ref: '#/components/schemas/CurrencyPreference'
          title: currencies
          type: array
      title: LookupUserResponse
      type: object
    ExecuteQuoteRequest:
      example:
        payment_hash: f1d2d2f924e986ac86fdf7b36c94bcdf32beec15
      properties:
        payment_hash:
          description: The payment hash of the quote to execute.
          example: f1d2d2f924e986ac86fdf7b36c94bcdf32beec15
          title: payment_hash
          type: string
      required:
      - payment_hash
      title: ExecuteQuoteRequest
      type: object
    ExecuteQuoteResponse:
      example:
        preimage: abcd1234
      properties:
        preimage:
          description: The preimage of the payment.
          example: abcd1234
          title: preimage
          type: string
      required:
      - preimage
      title: ExecuteQuoteResponse
      type: object
    PayToAddressRequest:
      example:
        sending_currency_code: MXN
        receiving_currency_code: USD
        receiver_address: $alice@vasp.net
        sending_currency_amount: 1000
      properties:
        receiver_address:
          description: The address to pay.
          example: $alice@vasp.net
          title: receiver_address
          type: string
        sending_currency_code:
          description: The code of the currency being sent from the sender's wallet.
          example: MXN
          title: sending_currency_code
          type: string
        sending_currency_amount:
          description: The amount to send in the smallest unit of the sending currency
            (eg. cents).
          example: 1000
          title: sending_currency_amount
          type: integer
        receiving_currency_code:
          description: "The code of the currency being received by the receiver. If\
            \ not provided, the receiver's default currency will be used."
          example: USD
          title: receiving_currency_code
          type: string
      required:
      - receiver_address
      - sending_currency_amount
      - sending_currency_code
      title: PayToAddressRequest
      type: object
    PayToAddressResponse:
      example:
        quote:
          sending_currency_code: MXN
          receiving_currency_code: USD
          fees: 10
          expires_at: 2021-01-01T00:00:00Z
          total_sending_amount: 123010
          total_receiving_amount: 1000
          multiplier: 123
          created_at: 2021-01-01T00:00:00Z
          payment_hash: f1d2d2f924e986ac86fdf7b36c94bcdf32beec15
        preimage: abcd1234
      properties:
        preimage:
          description: The preimage of the payment.
          example: abcd1234
          title: preimage
          type: string
        quote:
          $ref: '#/components/schemas/Quote'
      required:
      - preimage
      - quote
      title: PayToAddressResponse
      type: object
    GetInfoResponse:
      example:
        color: '#FF0000'
        methods:
        - make_invoice
        - make_invoice
        lud16: $alice@vasp.net
        alias: Alice's Wallet
        block_hash: abcd1234
        block_height: 1000
        pubkey: abcd1234
        network: testnet
        currencies:
        - symbol: $
          code: USD
          min: 1
          max: 1000000
          multiplier: 100000000
          decimals: 2
          name: United States Dollar
        - symbol: $
          code: USD
          min: 1
          max: 1000000
          multiplier: 100000000
          decimals: 2
          name: United States Dollar
      properties:
        alias:
          description: The alias of the user's node.
          example: Alice's Wallet
          title: alias
          type: string
        color:
          description: The color of the user's node.
          example: '#FF0000'
          title: color
          type: string
        pubkey:
          description: The pubkey of the user's node.
          example: abcd1234
          title: pubkey
          type: string
        network:
          description: The bitcoin network of the user's node.
          enum:
          - regtest
          - signet
          - testnet
          - mainnet
          example: testnet
          title: network
          type: string
        block_height:
          description: The current block height of the user's node.
          example: 1000
          title: block_height
          type: integer
        block_hash:
          description: The current block hash of the user's node.
          example: abcd1234
          title: block_hash
          type: string
        methods:
          description: A list of supported methods for this connection.
          items:
            description: The name of method.
            example: make_invoice
            type: string
          title: methods
          type: array
        lud16:
          description: The lightning or UMA address for the user.
          example: $alice@vasp.net
          title: lud16
          type: string
        currencies:
          description: "The currencies the user's wallet supports. Ordered by preference.\
            \ If not provided, assume this user only supports BTC."
          items:
            $ref: '#/components/schemas/CurrencyPreference'
          title: currencies
          type: array
      required:
      - methods
      - network
      - pubkey
      title: GetInfoResponse
      type: object
  securitySchemes:
    bearerAuth:
      bearerFormat: JWT
      scheme: bearer
      type: http
      x-bearerInfoFunc: uma_auth.controllers.security_controller.info_from_bearerAuth
