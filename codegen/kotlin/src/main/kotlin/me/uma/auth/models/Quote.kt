/**
* UMA Auth API
* This API allows you to authenticate with the UMA server to take actions on a user's wallet. It's the exposed communication layer between the NWC server and the main UMA server.
*
* The version of the OpenAPI document: 0.1
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package me.uma.auth.models

import me.uma.auth.models.Currency

/**
 * 
 * @param receivingCurrency 
 * @param paymentHash The payment hash of the quote. Used as an identifier to execute the quote.
 * @param expiresAt The time the quote expires in unix timestamp.
 * @param multiplier Number of sending currency units per receiving currency unit.
 * @param fees The fees associated with the quote in the smallest unit of the sending currency (eg. cents).
 * @param totalSendingAmount The total amount that will be sent in the smallest unit of the sending currency (eg. cents).
 * @param totalReceivingAmount The total amount that will be received in the smallest unit of the receiving currency (eg. cents).
 * @param createdAt The time the quote was created in unix timestamp.
 * @param sendingCurrency 
 */
data class Quote(
    val receivingCurrency: Currency,
    /* The payment hash of the quote. Used as an identifier to execute the quote. */
    val paymentHash: kotlin.String,
    /* The time the quote expires in unix timestamp. */
    val expiresAt: kotlin.Long,
    /* Number of sending currency units per receiving currency unit. */
    val multiplier: java.math.BigDecimal,
    /* The fees associated with the quote in the smallest unit of the sending currency (eg. cents). */
    val fees: kotlin.Long,
    /* The total amount that will be sent in the smallest unit of the sending currency (eg. cents). */
    val totalSendingAmount: kotlin.Long,
    /* The total amount that will be received in the smallest unit of the receiving currency (eg. cents). */
    val totalReceivingAmount: kotlin.Long,
    /* The time the quote was created in unix timestamp. */
    val createdAt: kotlin.Long,
    val sendingCurrency: Currency? = null
) 

