/**
* UMA Auth API
* This API allows you to authenticate with the UMA server to take actions on a user's wallet. It's the exposed communication layer between the NWC server and the main UMA server.
*
* The version of the OpenAPI document: 0.1
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package me.uma.auth.models


/**
 * 
 * @param receiverAddress The LUD16 address to pay.
 * @param sendingCurrencyCode The code of the currency being sent from the sender's wallet.
 * @param sendingCurrencyAmount The amount to send in the smallest unit of the sending currency (eg. cents).
 * @param receivingCurrencyCode The code of the currency being received by the receiver. If not provided, the receiver's default currency will be used.
 * @param budgetCurrencyCode The code of the currency the sender used to set budget. Optional if it is the same as `sending_currency_code`.
 */
data class PayToAddressRequest(
    /* The LUD16 address to pay. */
    val receiverAddress: kotlin.String,
    /* The code of the currency being sent from the sender's wallet. */
    val sendingCurrencyCode: kotlin.String,
    /* The amount to send in the smallest unit of the sending currency (eg. cents). */
    val sendingCurrencyAmount: kotlin.Long,
    /* The code of the currency being received by the receiver. If not provided, the receiver's default currency will be used. */
    val receivingCurrencyCode: kotlin.String? = null,
    /* The code of the currency the sender used to set budget. Optional if it is the same as `sending_currency_code`. */
    val budgetCurrencyCode: kotlin.String? = null
) 

