/* tslint:disable */
/* eslint-disable */
/**
 * UMA Auth API
 * This API allows you to authenticate with the UMA server to take actions on a user\'s wallet. It\'s the exposed communication layer between the NWC server and the main UMA server.
 *
 * The version of the OpenAPI document: 0.1
 * Contact: info@lightspark.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Transaction } from './Transaction';
import {
    TransactionFromJSON,
    TransactionFromJSONTyped,
    TransactionToJSON,
} from './Transaction';

/**
 * 
 * @export
 * @interface ListTransactionsResponse
 */
export interface ListTransactionsResponse {
    /**
     * A list of transactions including invoices and payments.
     * @type {Array<Transaction>}
     * @memberof ListTransactionsResponse
     */
    transactions: Array<Transaction>;
}

/**
 * Check if a given object implements the ListTransactionsResponse interface.
 */
export function instanceOfListTransactionsResponse(value: object): value is ListTransactionsResponse {
    if (!('transactions' in value) || value['transactions'] === undefined) return false;
    return true;
}

export function ListTransactionsResponseFromJSON(json: any): ListTransactionsResponse {
    return ListTransactionsResponseFromJSONTyped(json, false);
}

export function ListTransactionsResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ListTransactionsResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'transactions': ((json['transactions'] as Array<any>).map(TransactionFromJSON)),
    };
}

export function ListTransactionsResponseToJSON(value?: ListTransactionsResponse | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'transactions': ((value['transactions'] as Array<any>).map(TransactionToJSON)),
    };
}

