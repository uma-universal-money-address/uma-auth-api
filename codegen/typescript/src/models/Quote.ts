/* tslint:disable */
/* eslint-disable */
/**
 * UMA Auth API
 * This API allows you to authenticate with the UMA server to take actions on a user\'s wallet. It\'s the exposed communication layer between the NWC server and the main UMA server.
 *
 * The version of the OpenAPI document: 0.1
 * Contact: info@lightspark.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Quote
 */
export interface Quote {
    /**
     * The currency code of the sender's balance.
     * @type {string}
     * @memberof Quote
     */
    sendingCurrencyCode: string;
    /**
     * The currency code of the receiver's balance.
     * @type {string}
     * @memberof Quote
     */
    receivingCurrencyCode: string;
    /**
     * The payment hash of the quote. Used as an identifier to execute the quote.
     * @type {string}
     * @memberof Quote
     */
    paymentHash: string;
    /**
     * The time the quote expires.
     * @type {Date}
     * @memberof Quote
     */
    expiresAt: Date;
    /**
     * Number of sending currency units per receiving currency unit.
     * @type {number}
     * @memberof Quote
     */
    multiplier: number;
    /**
     * The fees associated with the quote in the smallest unit of the sending currency (eg. cents).
     * @type {number}
     * @memberof Quote
     */
    fees: number;
    /**
     * The total amount that will be sent in the smallest unit of the sending currency (eg. cents).
     * @type {number}
     * @memberof Quote
     */
    totalSendingAmount: number;
    /**
     * The total amount that will be received in the smallest unit of the receiving currency (eg. cents).
     * @type {number}
     * @memberof Quote
     */
    totalReceivingAmount: number;
    /**
     * The time the quote was created.
     * @type {Date}
     * @memberof Quote
     */
    createdAt: Date;
}

/**
 * Check if a given object implements the Quote interface.
 */
export function instanceOfQuote(value: object): value is Quote {
    if (!('sendingCurrencyCode' in value) || value['sendingCurrencyCode'] === undefined) return false;
    if (!('receivingCurrencyCode' in value) || value['receivingCurrencyCode'] === undefined) return false;
    if (!('paymentHash' in value) || value['paymentHash'] === undefined) return false;
    if (!('expiresAt' in value) || value['expiresAt'] === undefined) return false;
    if (!('multiplier' in value) || value['multiplier'] === undefined) return false;
    if (!('fees' in value) || value['fees'] === undefined) return false;
    if (!('totalSendingAmount' in value) || value['totalSendingAmount'] === undefined) return false;
    if (!('totalReceivingAmount' in value) || value['totalReceivingAmount'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    return true;
}

export function QuoteFromJSON(json: any): Quote {
    return QuoteFromJSONTyped(json, false);
}

export function QuoteFromJSONTyped(json: any, ignoreDiscriminator: boolean): Quote {
    if (json == null) {
        return json;
    }
    return {
        
        'sendingCurrencyCode': json['sending_currency_code'],
        'receivingCurrencyCode': json['receiving_currency_code'],
        'paymentHash': json['payment_hash'],
        'expiresAt': (new Date(json['expires_at'])),
        'multiplier': json['multiplier'],
        'fees': json['fees'],
        'totalSendingAmount': json['total_sending_amount'],
        'totalReceivingAmount': json['total_receiving_amount'],
        'createdAt': (new Date(json['created_at'])),
    };
}

export function QuoteToJSON(value?: Quote | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'sending_currency_code': value['sendingCurrencyCode'],
        'receiving_currency_code': value['receivingCurrencyCode'],
        'payment_hash': value['paymentHash'],
        'expires_at': ((value['expiresAt']).toISOString()),
        'multiplier': value['multiplier'],
        'fees': value['fees'],
        'total_sending_amount': value['totalSendingAmount'],
        'total_receiving_amount': value['totalReceivingAmount'],
        'created_at': ((value['createdAt']).toISOString()),
    };
}

