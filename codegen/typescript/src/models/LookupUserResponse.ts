/* tslint:disable */
/* eslint-disable */
/**
 * UMA Auth API
 * This API allows you to authenticate with the UMA server to take actions on a user\'s wallet. It\'s the exposed communication layer between the NWC server and the main UMA server.
 *
 * The version of the OpenAPI document: 0.1
 * Contact: info@lightspark.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CurrencyPreference } from './CurrencyPreference';
import {
    CurrencyPreferenceFromJSON,
    CurrencyPreferenceFromJSONTyped,
    CurrencyPreferenceToJSON,
} from './CurrencyPreference';

/**
 * 
 * @export
 * @interface LookupUserResponse
 */
export interface LookupUserResponse {
    /**
     * The currencies the receiver accepts in order of preference.
     * @type {Array<CurrencyPreference>}
     * @memberof LookupUserResponse
     */
    currencies?: Array<CurrencyPreference>;
}

/**
 * Check if a given object implements the LookupUserResponse interface.
 */
export function instanceOfLookupUserResponse(value: object): value is LookupUserResponse {
    return true;
}

export function LookupUserResponseFromJSON(json: any): LookupUserResponse {
    return LookupUserResponseFromJSONTyped(json, false);
}

export function LookupUserResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): LookupUserResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'currencies': json['currencies'] == null ? undefined : ((json['currencies'] as Array<any>).map(CurrencyPreferenceFromJSON)),
    };
}

export function LookupUserResponseToJSON(value?: LookupUserResponse | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'currencies': value['currencies'] == null ? undefined : ((value['currencies'] as Array<any>).map(CurrencyPreferenceToJSON)),
    };
}

