/* tslint:disable */
/* eslint-disable */
/**
 * UMA Auth API
 * This API allows you to authenticate with the UMA server to take actions on a user\'s wallet. It\'s the exposed communication layer between the NWC server and the main UMA server.
 *
 * The version of the OpenAPI document: 0.1
 * Contact: info@lightspark.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


/**
 * The side of the quote which should be locked and specified in the `locked_currency_amount`. For example, if I want to send exactly $5 MXN from my wallet, I would set this to "sending", and the `locked_currency_amount` to 500 (in cents). If I want the receiver to receive exactly $10 USD, I would set this to "receiving" and the `locked_currency_amount` to 10000 (in cents).
 * @export
 */
export const LockedCurrencySide = {
    Sending: 'sending',
    Receiving: 'receiving'
} as const;
export type LockedCurrencySide = typeof LockedCurrencySide[keyof typeof LockedCurrencySide];


export function instanceOfLockedCurrencySide(value: any): boolean {
    for (const key in LockedCurrencySide) {
        if (Object.prototype.hasOwnProperty.call(LockedCurrencySide, key)) {
            if ((LockedCurrencySide as Record<string, LockedCurrencySide>)[key] === value) {
                return true;
            }
        }
    }
    return false;
}

export function LockedCurrencySideFromJSON(json: any): LockedCurrencySide {
    return LockedCurrencySideFromJSONTyped(json, false);
}

export function LockedCurrencySideFromJSONTyped(json: any, ignoreDiscriminator: boolean): LockedCurrencySide {
    return json as LockedCurrencySide;
}

export function LockedCurrencySideToJSON(value?: LockedCurrencySide | null): any {
    return value as any;
}

