from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from uma_auth.models.base_model import Model
from uma_auth import util


class ExecuteQuoteResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, preimage=None):  # noqa: E501
        """ExecuteQuoteResponse - a model defined in OpenAPI

        :param preimage: The preimage of this ExecuteQuoteResponse.  # noqa: E501
        :type preimage: str
        """
        self.openapi_types = {
            'preimage': str
        }

        self.attribute_map = {
            'preimage': 'preimage'
        }

        self._preimage = preimage

    @classmethod
    def from_dict(cls, dikt) -> 'ExecuteQuoteResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ExecuteQuoteResponse of this ExecuteQuoteResponse.  # noqa: E501
        :rtype: ExecuteQuoteResponse
        """
        return util.deserialize_model(dikt, cls)

    @property
    def preimage(self) -> str:
        """Gets the preimage of this ExecuteQuoteResponse.

        The preimage of the payment.  # noqa: E501

        :return: The preimage of this ExecuteQuoteResponse.
        :rtype: str
        """
        return self._preimage

    @preimage.setter
    def preimage(self, preimage: str):
        """Sets the preimage of this ExecuteQuoteResponse.

        The preimage of the payment.  # noqa: E501

        :param preimage: The preimage of this ExecuteQuoteResponse.
        :type preimage: str
        """
        if preimage is None:
            raise ValueError("Invalid value for `preimage`, must not be `None`")  # noqa: E501

        self._preimage = preimage
