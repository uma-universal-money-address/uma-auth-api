from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from uma_auth.models.base_model import Model
from uma_auth import util


class MakeInvoiceRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, amount=None, description=None, description_hash=None, expiry=None):  # noqa: E501
        """MakeInvoiceRequest - a model defined in OpenAPI

        :param amount: The amount of this MakeInvoiceRequest.  # noqa: E501
        :type amount: float
        :param description: The description of this MakeInvoiceRequest.  # noqa: E501
        :type description: str
        :param description_hash: The description_hash of this MakeInvoiceRequest.  # noqa: E501
        :type description_hash: str
        :param expiry: The expiry of this MakeInvoiceRequest.  # noqa: E501
        :type expiry: float
        """
        self.openapi_types = {
            'amount': float,
            'description': str,
            'description_hash': str,
            'expiry': float
        }

        self.attribute_map = {
            'amount': 'amount',
            'description': 'description',
            'description_hash': 'description_hash',
            'expiry': 'expiry'
        }

        self._amount = amount
        self._description = description
        self._description_hash = description_hash
        self._expiry = expiry

    @classmethod
    def from_dict(cls, dikt) -> 'MakeInvoiceRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The MakeInvoiceRequest of this MakeInvoiceRequest.  # noqa: E501
        :rtype: MakeInvoiceRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def amount(self) -> float:
        """Gets the amount of this MakeInvoiceRequest.

        The amount to invoice in msats.  # noqa: E501

        :return: The amount of this MakeInvoiceRequest.
        :rtype: float
        """
        return self._amount

    @amount.setter
    def amount(self, amount: float):
        """Sets the amount of this MakeInvoiceRequest.

        The amount to invoice in msats.  # noqa: E501

        :param amount: The amount of this MakeInvoiceRequest.
        :type amount: float
        """
        if amount is None:
            raise ValueError("Invalid value for `amount`, must not be `None`")  # noqa: E501

        self._amount = amount

    @property
    def description(self) -> str:
        """Gets the description of this MakeInvoiceRequest.

        A memo to attach to the invoice.  # noqa: E501

        :return: The description of this MakeInvoiceRequest.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description: str):
        """Sets the description of this MakeInvoiceRequest.

        A memo to attach to the invoice.  # noqa: E501

        :param description: The description of this MakeInvoiceRequest.
        :type description: str
        """

        self._description = description

    @property
    def description_hash(self) -> str:
        """Gets the description_hash of this MakeInvoiceRequest.

        A hash of a longer description field.  # noqa: E501

        :return: The description_hash of this MakeInvoiceRequest.
        :rtype: str
        """
        return self._description_hash

    @description_hash.setter
    def description_hash(self, description_hash: str):
        """Sets the description_hash of this MakeInvoiceRequest.

        A hash of a longer description field.  # noqa: E501

        :param description_hash: The description_hash of this MakeInvoiceRequest.
        :type description_hash: str
        """

        self._description_hash = description_hash

    @property
    def expiry(self) -> float:
        """Gets the expiry of this MakeInvoiceRequest.

        The number of seconds until the invoice expires.  # noqa: E501

        :return: The expiry of this MakeInvoiceRequest.
        :rtype: float
        """
        return self._expiry

    @expiry.setter
    def expiry(self, expiry: float):
        """Sets the expiry of this MakeInvoiceRequest.

        The number of seconds until the invoice expires.  # noqa: E501

        :param expiry: The expiry of this MakeInvoiceRequest.
        :type expiry: float
        """

        self._expiry = expiry
